/**
 * gmodstore
 * Welcome to the GmodStore API! You can use our API to access GmodStore API endpoints, which can be used interact with GmodStore programmatically.  # Rate limits Every request you make to the GmodStore API will count against your rate limit, which at the time of writing this, is 60 requests / minute. An up-to-date value will always provided in the `X-RateLimit-Limit` header The number of requests you have remaining before you must wait is provided in the `X-RateLimit-Remaining` header.  # API SDKs For a list of available API SDKs check the README here: https://github.com/everyday-as/gmodstore-api-docs#client-libraries
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreatePermissionGroupResponse from '../model/CreatePermissionGroupResponse';
import DeletePermissionGroupResponse from '../model/DeletePermissionGroupResponse';
import Error from '../model/Error';
import GetPermissionGroupResponse from '../model/GetPermissionGroupResponse';
import NewPermissionGroupPayload from '../model/NewPermissionGroupPayload';
import UpdatePermissionGroupPayload from '../model/UpdatePermissionGroupPayload';
import UpdatePermissionGroupResponse from '../model/UpdatePermissionGroupResponse';

/**
* PermissionGroups service.
* @module Everyday/GmodStore/Sdk/api/PermissionGroupsApi
* @version 3.0.0
*/
export default class PermissionGroupsApi {

    /**
    * Constructs a new PermissionGroupsApi. 
    * @alias module:Everyday/GmodStore/Sdk/api/PermissionGroupsApi
    * @class
    * @param {module:Everyday/GmodStore/Sdk/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:Everyday/GmodStore/Sdk/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createPermissionGroup operation.
     * @callback module:Everyday/GmodStore/Sdk/api/PermissionGroupsApi~createPermissionGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:Everyday/GmodStore/Sdk/model/CreatePermissionGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a permission group
     * @param {Object} opts Optional parameters
     * @param {module:Everyday/GmodStore/Sdk/model/NewPermissionGroupPayload} opts.newPermissionGroupPayload 
     * @param {module:Everyday/GmodStore/Sdk/api/PermissionGroupsApi~createPermissionGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Everyday/GmodStore/Sdk/model/CreatePermissionGroupResponse}
     */
    createPermissionGroup(opts, callback) {
      opts = opts || {};
      let postBody = opts['newPermissionGroupPayload'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['PersonalAccessToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreatePermissionGroupResponse;
      return this.apiClient.callApi(
        '/api/v3/permission-groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deletePermissionGroup operation.
     * @callback module:Everyday/GmodStore/Sdk/api/PermissionGroupsApi~deletePermissionGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:Everyday/GmodStore/Sdk/model/DeletePermissionGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete the specified permission group
     * @param {String} permissionGroup 
     * @param {module:Everyday/GmodStore/Sdk/api/PermissionGroupsApi~deletePermissionGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Everyday/GmodStore/Sdk/model/DeletePermissionGroupResponse}
     */
    deletePermissionGroup(permissionGroup, callback) {
      let postBody = null;
      // verify the required parameter 'permissionGroup' is set
      if (permissionGroup === undefined || permissionGroup === null) {
        throw new Error("Missing the required parameter 'permissionGroup' when calling deletePermissionGroup");
      }

      let pathParams = {
        'permission_group': permissionGroup
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['PersonalAccessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeletePermissionGroupResponse;
      return this.apiClient.callApi(
        '/api/v3/permission-groups/{permission_group}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPermissionGroup operation.
     * @callback module:Everyday/GmodStore/Sdk/api/PermissionGroupsApi~getPermissionGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:Everyday/GmodStore/Sdk/model/GetPermissionGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Show the specified permission group
     * @param {String} permissionGroup 
     * @param {module:Everyday/GmodStore/Sdk/api/PermissionGroupsApi~getPermissionGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Everyday/GmodStore/Sdk/model/GetPermissionGroupResponse}
     */
    getPermissionGroup(permissionGroup, callback) {
      let postBody = null;
      // verify the required parameter 'permissionGroup' is set
      if (permissionGroup === undefined || permissionGroup === null) {
        throw new Error("Missing the required parameter 'permissionGroup' when calling getPermissionGroup");
      }

      let pathParams = {
        'permission_group': permissionGroup
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['PersonalAccessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetPermissionGroupResponse;
      return this.apiClient.callApi(
        '/api/v3/permission-groups/{permission_group}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPermissionGroups operation.
     * @callback module:Everyday/GmodStore/Sdk/api/PermissionGroupsApi~listPermissionGroupsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all permission groups
     * @param {Object} opts Optional parameters
     * @param {Number} opts.perPage  (default to 24)
     * @param {String} opts.cursor The cursor from which to return paginated results starting after
     * @param {module:Everyday/GmodStore/Sdk/api/PermissionGroupsApi~listPermissionGroupsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    listPermissionGroups(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'cursor': opts['cursor']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['PersonalAccessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/v3/permission-groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePermissionGroup operation.
     * @callback module:Everyday/GmodStore/Sdk/api/PermissionGroupsApi~updatePermissionGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:Everyday/GmodStore/Sdk/model/UpdatePermissionGroupResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the specified permission group
     * @param {String} permissionGroup 
     * @param {Object} opts Optional parameters
     * @param {module:Everyday/GmodStore/Sdk/model/UpdatePermissionGroupPayload} opts.updatePermissionGroupPayload 
     * @param {module:Everyday/GmodStore/Sdk/api/PermissionGroupsApi~updatePermissionGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Everyday/GmodStore/Sdk/model/UpdatePermissionGroupResponse}
     */
    updatePermissionGroup(permissionGroup, opts, callback) {
      opts = opts || {};
      let postBody = opts['updatePermissionGroupPayload'];
      // verify the required parameter 'permissionGroup' is set
      if (permissionGroup === undefined || permissionGroup === null) {
        throw new Error("Missing the required parameter 'permissionGroup' when calling updatePermissionGroup");
      }

      let pathParams = {
        'permission_group': permissionGroup
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['PersonalAccessToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdatePermissionGroupResponse;
      return this.apiClient.callApi(
        '/api/v3/permission-groups/{permission_group}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
