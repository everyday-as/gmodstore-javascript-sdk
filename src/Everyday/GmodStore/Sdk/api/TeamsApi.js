/**
 * gmodstore
 * Welcome to the GmodStore API! You can use our API to access GmodStore API endpoints, which can be used interact with GmodStore programmatically.  # Rate limits Every request you make to the GmodStore API will count against your rate limit, which at the time of writing this, is 60 requests / minute. An up-to-date value will always provided in the `X-RateLimit-Limit` header The number of requests you have remaining before you must wait is provided in the `X-RateLimit-Remaining` header.  # API SDKs For a list of available API SDKs check the README here: https://github.com/everyday-as/gmodstore-api-docs#client-libraries
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateTeamResponse from '../model/CreateTeamResponse';
import DeleteTeamResponse from '../model/DeleteTeamResponse';
import Error from '../model/Error';
import GetTeamResponse from '../model/GetTeamResponse';
import GetTeamsResponse from '../model/GetTeamsResponse';
import NewTeamPayload from '../model/NewTeamPayload';
import UpdateTeamPayload from '../model/UpdateTeamPayload';
import UpdateTeamResponse from '../model/UpdateTeamResponse';

/**
* Teams service.
* @module Everyday/GmodStore/Sdk/api/TeamsApi
* @version 3.1.0
*/
export default class TeamsApi {

    /**
    * Constructs a new TeamsApi. 
    * @alias module:Everyday/GmodStore/Sdk/api/TeamsApi
    * @class
    * @param {module:Everyday/GmodStore/Sdk/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:Everyday/GmodStore/Sdk/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createTeam operation.
     * @callback module:Everyday/GmodStore/Sdk/api/TeamsApi~createTeamCallback
     * @param {String} error Error message, if any.
     * @param {module:Everyday/GmodStore/Sdk/model/CreateTeamResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new team
     * @param {Object} opts Optional parameters
     * @param {module:Everyday/GmodStore/Sdk/model/NewTeamPayload} opts.newTeamPayload 
     * @param {module:Everyday/GmodStore/Sdk/api/TeamsApi~createTeamCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Everyday/GmodStore/Sdk/model/CreateTeamResponse}
     */
    createTeam(opts, callback) {
      opts = opts || {};
      let postBody = opts['newTeamPayload'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['PersonalAccessToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateTeamResponse;
      return this.apiClient.callApi(
        '/api/v3/teams', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteTeam operation.
     * @callback module:Everyday/GmodStore/Sdk/api/TeamsApi~deleteTeamCallback
     * @param {String} error Error message, if any.
     * @param {module:Everyday/GmodStore/Sdk/model/DeleteTeamResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete the specified team
     * @param {String} team 
     * @param {module:Everyday/GmodStore/Sdk/api/TeamsApi~deleteTeamCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Everyday/GmodStore/Sdk/model/DeleteTeamResponse}
     */
    deleteTeam(team, callback) {
      let postBody = null;
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling deleteTeam");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['PersonalAccessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DeleteTeamResponse;
      return this.apiClient.callApi(
        '/api/v3/teams/{team}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTeam operation.
     * @callback module:Everyday/GmodStore/Sdk/api/TeamsApi~getTeamCallback
     * @param {String} error Error message, if any.
     * @param {module:Everyday/GmodStore/Sdk/model/GetTeamResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch the specified team
     * @param {String} team 
     * @param {module:Everyday/GmodStore/Sdk/api/TeamsApi~getTeamCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Everyday/GmodStore/Sdk/model/GetTeamResponse}
     */
    getTeam(team, callback) {
      let postBody = null;
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling getTeam");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['PersonalAccessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetTeamResponse;
      return this.apiClient.callApi(
        '/api/v3/teams/{team}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTeams operation.
     * @callback module:Everyday/GmodStore/Sdk/api/TeamsApi~getTeamsCallback
     * @param {String} error Error message, if any.
     * @param {module:Everyday/GmodStore/Sdk/model/GetTeamsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a batch of teams by id
     * @param {Array.<String>} ids 
     * @param {module:Everyday/GmodStore/Sdk/api/TeamsApi~getTeamsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Everyday/GmodStore/Sdk/model/GetTeamsResponse}
     */
    getTeams(ids, callback) {
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling getTeams");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids[]': this.apiClient.buildCollectionParam(ids, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['PersonalAccessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetTeamsResponse;
      return this.apiClient.callApi(
        '/api/v3/teams/batch', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listTeams operation.
     * @callback module:Everyday/GmodStore/Sdk/api/TeamsApi~listTeamsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all teams
     * @param {Object} opts Optional parameters
     * @param {Number} opts.perPage  (default to 24)
     * @param {String} opts.cursor The cursor from which to return paginated results starting after
     * @param {module:Everyday/GmodStore/Sdk/api/TeamsApi~listTeamsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    listTeams(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'perPage': opts['perPage'],
        'cursor': opts['cursor']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['PersonalAccessToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/v3/teams', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateTeam operation.
     * @callback module:Everyday/GmodStore/Sdk/api/TeamsApi~updateTeamCallback
     * @param {String} error Error message, if any.
     * @param {module:Everyday/GmodStore/Sdk/model/UpdateTeamResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the specified team
     * @param {String} team 
     * @param {Object} opts Optional parameters
     * @param {module:Everyday/GmodStore/Sdk/model/UpdateTeamPayload} opts.updateTeamPayload 
     * @param {module:Everyday/GmodStore/Sdk/api/TeamsApi~updateTeamCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Everyday/GmodStore/Sdk/model/UpdateTeamResponse}
     */
    updateTeam(team, opts, callback) {
      opts = opts || {};
      let postBody = opts['updateTeamPayload'];
      // verify the required parameter 'team' is set
      if (team === undefined || team === null) {
        throw new Error("Missing the required parameter 'team' when calling updateTeam");
      }

      let pathParams = {
        'team': team
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['PersonalAccessToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateTeamResponse;
      return this.apiClient.callApi(
        '/api/v3/teams/{team}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
