/**
 * gmodstore
 * Welcome to the GmodStore API! You can use our API to access GmodStore API endpoints, which can be used interact with GmodStore programmatically.  # Rate limits Every request you make to the GmodStore API will count against your rate limit, which at the time of writing this, is 60 requests / minute. An up-to-date value will always provided in the `X-RateLimit-Limit` header The number of requests you have remaining before you must wait is provided in the `X-RateLimit-Remaining` header.  # API SDKs For a list of available API SDKs check the README here: https://github.com/everyday-as/gmodstore-api-docs#client-libraries
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PermissionGroup model module.
 * @module Everyday/GmodStore/Sdk/model/PermissionGroup
 * @version 3.1.0
 */
class PermissionGroup {
    /**
     * Constructs a new <code>PermissionGroup</code>.
     * @alias module:Everyday/GmodStore/Sdk/model/PermissionGroup
     * @param id {String} 
     * @param title {String} 
     * @param commissionRate {Number} 
     * @param displayOrder {Number} 
     * @param _default {Boolean} 
     * @param editable {Boolean} 
     * @param permissions {String} 
     * @param createdAt {Date} 
     * @param updatedAt {Date} 
     */
    constructor(id, title, commissionRate, displayOrder, _default, editable, permissions, createdAt, updatedAt) { 
        
        PermissionGroup.initialize(this, id, title, commissionRate, displayOrder, _default, editable, permissions, createdAt, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, title, commissionRate, displayOrder, _default, editable, permissions, createdAt, updatedAt) { 
        obj['id'] = id;
        obj['title'] = title;
        obj['commissionRate'] = commissionRate || 20;
        obj['displayOrder'] = displayOrder;
        obj['default'] = _default || false;
        obj['editable'] = editable || true;
        obj['permissions'] = permissions;
        obj['createdAt'] = createdAt;
        obj['updatedAt'] = updatedAt;
    }

    /**
     * Constructs a <code>PermissionGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Everyday/GmodStore/Sdk/model/PermissionGroup} obj Optional instance to populate.
     * @return {module:Everyday/GmodStore/Sdk/model/PermissionGroup} The populated <code>PermissionGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PermissionGroup();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('commissionRate')) {
                obj['commissionRate'] = ApiClient.convertToType(data['commissionRate'], 'Number');
            }
            if (data.hasOwnProperty('displayOrder')) {
                obj['displayOrder'] = ApiClient.convertToType(data['displayOrder'], 'Number');
            }
            if (data.hasOwnProperty('default')) {
                obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
            }
            if (data.hasOwnProperty('editable')) {
                obj['editable'] = ApiClient.convertToType(data['editable'], 'Boolean');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
PermissionGroup.prototype['id'] = undefined;

/**
 * @member {String} title
 */
PermissionGroup.prototype['title'] = undefined;

/**
 * @member {Number} commissionRate
 * @default 20
 */
PermissionGroup.prototype['commissionRate'] = 20;

/**
 * @member {Number} displayOrder
 */
PermissionGroup.prototype['displayOrder'] = undefined;

/**
 * @member {Boolean} default
 * @default false
 */
PermissionGroup.prototype['default'] = false;

/**
 * @member {Boolean} editable
 * @default true
 */
PermissionGroup.prototype['editable'] = true;

/**
 * @member {String} permissions
 */
PermissionGroup.prototype['permissions'] = undefined;

/**
 * @member {Date} createdAt
 */
PermissionGroup.prototype['createdAt'] = undefined;

/**
 * @member {Date} updatedAt
 */
PermissionGroup.prototype['updatedAt'] = undefined;






export default PermissionGroup;

