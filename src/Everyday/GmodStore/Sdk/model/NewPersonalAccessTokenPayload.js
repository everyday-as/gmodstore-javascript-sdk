/**
 * gmodstore
 * Welcome to the GmodStore API! You can use our API to access GmodStore API endpoints, which can be used interact with GmodStore programmatically.  # Rate limits Every request you make to the GmodStore API will count against your rate limit, which at the time of writing this, is 60 requests / minute. An up-to-date value will always provided in the `X-RateLimit-Limit` header The number of requests you have remaining before you must wait is provided in the `X-RateLimit-Remaining` header.  # API SDKs For a list of available API SDKs check the README here: https://github.com/everyday-as/gmodstore-api-docs#client-libraries
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NewPersonalAccessTokenPayload model module.
 * @module Everyday/GmodStore/Sdk/model/NewPersonalAccessTokenPayload
 * @version 3.0.0
 */
class NewPersonalAccessTokenPayload {
    /**
     * Constructs a new <code>NewPersonalAccessTokenPayload</code>.
     * @alias module:Everyday/GmodStore/Sdk/model/NewPersonalAccessTokenPayload
     * @param name {String} 
     * @param abilities {Array.<module:Everyday/GmodStore/Sdk/model/NewPersonalAccessTokenPayload.AbilitiesEnum>} 
     */
    constructor(name, abilities) { 
        
        NewPersonalAccessTokenPayload.initialize(this, name, abilities);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, abilities) { 
        obj['name'] = name;
        obj['abilities'] = abilities;
    }

    /**
     * Constructs a <code>NewPersonalAccessTokenPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:Everyday/GmodStore/Sdk/model/NewPersonalAccessTokenPayload} obj Optional instance to populate.
     * @return {module:Everyday/GmodStore/Sdk/model/NewPersonalAccessTokenPayload} The populated <code>NewPersonalAccessTokenPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewPersonalAccessTokenPayload();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('expiresAt')) {
                obj['expiresAt'] = ApiClient.convertToType(data['expiresAt'], 'Date');
            }
            if (data.hasOwnProperty('abilities')) {
                obj['abilities'] = ApiClient.convertToType(data['abilities'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
NewPersonalAccessTokenPayload.prototype['name'] = undefined;

/**
 * @member {Date} expiresAt
 */
NewPersonalAccessTokenPayload.prototype['expiresAt'] = undefined;

/**
 * @member {Array.<module:Everyday/GmodStore/Sdk/model/NewPersonalAccessTokenPayload.AbilitiesEnum>} abilities
 */
NewPersonalAccessTokenPayload.prototype['abilities'] = undefined;





/**
 * Allowed values for the <code>abilities</code> property.
 * @enum {String}
 * @readonly
 */
NewPersonalAccessTokenPayload['AbilitiesEnum'] = {

    /**
     * value: "permission-groups:read"
     * @const
     */
    "permission-groups:read": "permission-groups:read",

    /**
     * value: "permission-groups:write"
     * @const
     */
    "permission-groups:write": "permission-groups:write",

    /**
     * value: "personal-access-tokens:read"
     * @const
     */
    "personal-access-tokens:read": "personal-access-tokens:read",

    /**
     * value: "personal-access-tokens:write"
     * @const
     */
    "personal-access-tokens:write": "personal-access-tokens:write",

    /**
     * value: "teams:read"
     * @const
     */
    "teams:read": "teams:read",

    /**
     * value: "teams:write"
     * @const
     */
    "teams:write": "teams:write",

    /**
     * value: "team-users:read"
     * @const
     */
    "team-users:read": "team-users:read",

    /**
     * value: "team-users:write"
     * @const
     */
    "team-users:write": "team-users:write",

    /**
     * value: "products:read"
     * @const
     */
    "products:read": "products:read",

    /**
     * value: "products:write"
     * @const
     */
    "products:write": "products:write",

    /**
     * value: "product-coupons:read"
     * @const
     */
    "product-coupons:read": "product-coupons:read",

    /**
     * value: "product-coupons:write"
     * @const
     */
    "product-coupons:write": "product-coupons:write",

    /**
     * value: "product-purchases:read"
     * @const
     */
    "product-purchases:read": "product-purchases:read",

    /**
     * value: "product-purchases:write"
     * @const
     */
    "product-purchases:write": "product-purchases:write",

    /**
     * value: "product-reviews:read"
     * @const
     */
    "product-reviews:read": "product-reviews:read",

    /**
     * value: "product-reviews:write"
     * @const
     */
    "product-reviews:write": "product-reviews:write",

    /**
     * value: "product-versions:read"
     * @const
     */
    "product-versions:read": "product-versions:read",

    /**
     * value: "product-versions:write"
     * @const
     */
    "product-versions:write": "product-versions:write",

    /**
     * value: "product-versions:download"
     * @const
     */
    "product-versions:download": "product-versions:download",

    /**
     * value: "users:read"
     * @const
     */
    "users:read": "users:read",

    /**
     * value: "users:write"
     * @const
     */
    "users:write": "users:write",

    /**
     * value: "user-badges:read"
     * @const
     */
    "user-badges:read": "user-badges:read",

    /**
     * value: "user-badges:write"
     * @const
     */
    "user-badges:write": "user-badges:write",

    /**
     * value: "user-bans:read"
     * @const
     */
    "user-bans:read": "user-bans:read",

    /**
     * value: "user-purchases:read"
     * @const
     */
    "user-purchases:read": "user-purchases:read",

    /**
     * value: "*"
     * @const
     */
    "STAR": "*"
};



export default NewPersonalAccessTokenPayload;

